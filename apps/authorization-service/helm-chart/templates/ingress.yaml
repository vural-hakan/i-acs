{{- if .Values.ingress.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.svc.name }}
  namespace: {{ .Values.deploy.namespace }}
  annotations:
    nginx.ingress.kubernetes.io/proxy-buffer-size: "512k"
    ingress.kubernetes.io/rewrite-target: /
  {{- if $.Values.ingress.idle_timeout.enabled }}
    alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds={{ $.Values.ingress.idle_timeout.value }}
  {{- end}}
  {{- if $.Values.ingress.healthcheck.enabled }}
    alb.ingress.kubernetes.io/healthcheck-path: {{ $.Values.ingress.healthcheck.path }}
    alb.ingress.kubernetes.io/healthcheck-port: {{ $.Values.svc.nodePort | quote }}
  {{- end}}
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    alb.ingress.kubernetes.io/inbound-cidrs: 0.0.0.0/0
    kubernetes.io/ingress.class: {{ $.Values.ingress.class }}
    alb.ingress.kubernetes.io/scheme: {{ $.Values.ingress.scheme }}
    alb.ingress.kubernetes.io/target-type: {{ $.Values.ingress.targettype }}
spec:
  rules:
  - host: {{ $.Values.ingress.host }}
    http:
      paths:
{{- range $env, $val := $.Values.ingress.path }}
      - path: /{{ .url }}
        backend:
          service:
            name: {{ $.Values.svc.name }}
            port:
              number: {{ $.Values.svc.port }}
        pathType: ImplementationSpecific       
{{- end }}
{{- end }}